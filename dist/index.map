{"version":3,"sources":["index.js"],"names":["generateCenterViewBox","svg","padding","getBBox","x","y","width","height","edge","Math","max","newX","newY","createDownloadLink","id","content","downloadLink","document","getElementById","url","encodeURIComponent","href","download","window","onload","File","FileReader","FileList","Blob","alert","addEventListener","event","files","target","value","console","log","Array","from","forEach","file","type","match","reader","theFile","e","a","createElement","name","split","slice","join","innerHTML","result","insertBefore","readAsText","querySelectorAll","Number","newViewBox","setAttribute","parentElement","outerHTML","link","click"],"mappings":";;;AAoCA,aApCA,QAAA,gBACA,IAAMA,EAAwB,SAACC,GAAKC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAMxCD,EAAAA,EAAIE,UAJNC,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,OAEIC,EAAOC,KAAKC,IAAIJ,EAAOC,GAAUL,EAAUA,EAE/CS,EAGAP,EAFAQ,EAGAP,EAOK,OALHC,EAAQC,EACVK,EAAOP,GAAKC,EAAQC,GAAU,EAE9BI,EAAOP,GAAKG,EAASD,GAAS,EAEzB,CACLF,EAAGO,EAAOT,EACVG,EAAGO,EAAOV,EACVI,MAAOE,EACPD,OAAQC,IAINK,EAAqB,SAACC,EAAIC,GACxBC,IAAAA,EAAeC,SAASC,eAAeJ,GACzCK,EAAM,oCAAsCC,mBAAmBL,GACnEC,EAAaK,KAAOF,EACpBH,EAAaM,SAAWR,EAAK,QAG/BS,OAAOC,OAAS,WACVD,OAAOE,MAAQF,OAAOG,YAAcH,OAAOI,UAAYJ,OAAOK,MAGhEC,MAAM,0DAEYZ,SAASC,eAAe,QAChCY,iBAAiB,SAAU,SAAAC,GAC/BC,IAAAA,EAAQD,EAAME,OAAOD,MAC3BD,EAAMG,MAAQ,GACdC,QAAQC,IAAIJ,GACZK,MAAMC,KAAKN,GAAOO,QAAQ,SAAAC,GAEpBA,GADJL,QAAQC,IAAII,EAAKC,MACbD,EAAKC,KAAKC,MAAM,OAAQ,CAEtBC,IAAAA,EAAS,IAAIjB,WAGjBiB,EAAOnB,QAAoBoB,EAQxBJ,EAPM,SAAAK,GAEDC,IAAAA,EAAI7B,SAAS8B,cAAc,KAC/BD,EAAEhC,GAAK8B,EAAQI,KAAKC,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,KACjDL,EAAEM,UAAY,CAACP,EAAEZ,OAAOoB,QAAQF,KAAK,IACrClC,SAASC,eAAe,QAAQoC,aAAaR,EAAG,QAKpDH,EAAOY,WAAWf,GAXD,IAAUI,MAgBZ3B,SAASC,eAAe,UAChCY,iBAAiB,QAAS,SAAAC,GACrBd,SAASuC,iBAAiB,eAClCjB,QAAQ,SAAAtC,GACRC,IAAAA,EAAUuD,OAAOxC,SAASC,eAAe,WAAWgB,OACpDwB,EAAa1D,EAAsBC,EAAKC,GAE5CE,EAIEsD,EAJFtD,EACAC,EAGEqD,EAHFrD,EACAC,EAEEoD,EAFFpD,MACAC,EACEmD,EADFnD,OAEF4B,QAAQC,IAAIsB,GACZzD,EAAI0D,aAAa,UAAW,CAACvD,EAAGC,EAAGC,EAAOC,GAAQ4C,KAAK,MACvDtC,EAAmBZ,EAAI2D,cAAc9C,GAAIb,EAAI4D,eAI7B5C,SAASC,eAAe,eAChCY,iBAAiB,QAAS,WACpCb,SAASuC,iBAAiB,WAAWjB,QAAQ,SAAAuB,GAAQA,OAAAA,EAAKC","file":"index.map","sourceRoot":"..\\src","sourcesContent":["import './index.less';\r\nconst generateCenterViewBox = (svg, padding = 0) => {\r\n  const {\r\n    x,\r\n    y,\r\n    width,\r\n    height\r\n  } = svg.getBBox();\r\n  const edge = Math.max(width, height) + padding + padding;\r\n  let [\r\n    newX,\r\n    newY\r\n  ] = [\r\n    x,\r\n    y\r\n  ];\r\n  if (width > height) {\r\n    newY = y - (width - height) / 2;\r\n  } else {\r\n    newX = x - (height - width) / 2;\r\n  }\r\n  return {\r\n    x: newX - padding,\r\n    y: newY - padding,\r\n    width: edge,\r\n    height: edge\r\n  };\r\n};\r\n\r\nconst createDownloadLink = (id, content) => {\r\n  const downloadLink = document.getElementById(id);\r\n  var url = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(content);\r\n  downloadLink.href = url;\r\n  downloadLink.download = id + '.svg';\r\n};\r\n\r\nwindow.onload = () => {\r\n  if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n    // Great success! All the File APIs are supported.\r\n  } else {\r\n    alert('The File APIs are not fully supported in this browser.');\r\n  }\r\n  const fileElement = document.getElementById('file');\r\n  fileElement.addEventListener('change', event => {\r\n    const files = event.target.files;\r\n    event.value = '';\r\n    console.log(files);\r\n    Array.from(files).forEach(file => {\r\n      console.log(file.type);\r\n      if (file.type.match('svg')) {\r\n\r\n        var reader = new FileReader();\r\n\r\n        // Closure to capture the file information.\r\n        reader.onload = (function (theFile) {\r\n          return e => {\r\n            // Render thumbnail.\r\n            var a = document.createElement('a');\r\n            a.id = theFile.name.split('.').slice(0, -1).join('.');\r\n            a.innerHTML = [e.target.result].join('');\r\n            document.getElementById('list').insertBefore(a, null);\r\n          };\r\n        })(file);\r\n\r\n        // Read in the image file as a data URL.\r\n        reader.readAsText(file);\r\n      }\r\n    });\r\n  });\r\n\r\n  const submitButton = document.getElementById('submit');\r\n  submitButton.addEventListener('click', event => {\r\n    const svgList = document.querySelectorAll('#list a svg');\r\n    svgList.forEach(svg => {\r\n      const padding = Number(document.getElementById('padding').value);\r\n      const newViewBox = generateCenterViewBox(svg, padding);\r\n      const {\r\n        x,\r\n        y,\r\n        width,\r\n        height\r\n      } = newViewBox;\r\n      console.log(newViewBox);\r\n      svg.setAttribute('viewBox', [x, y, width, height].join(' '));\r\n      createDownloadLink(svg.parentElement.id, svg.outerHTML);\r\n    });\r\n  });\r\n\r\n  const downloadAll = document.getElementById('downloadAll');\r\n  downloadAll.addEventListener('click', () => {\r\n    document.querySelectorAll('#list a').forEach(link => link.click());\r\n  });\r\n};"]}